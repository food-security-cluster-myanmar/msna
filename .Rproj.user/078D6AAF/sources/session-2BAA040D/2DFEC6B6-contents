---
title: "datasets"
output: html_document
date: '2022-09-08'
---

```{r setup, include=FALSE, message=FALSE, warning=FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(tidyverse)
library(scales)
library(janitor)
library(haven)
library(psych)
library(skimr)
library(mdepriv)
library(broom)
library(readxl)
library(widyr)
library(DT)
library(viridis)
library(corrplot)
library(rpart)
library(rpart.utils)
library(rattle)
library(rpart.plot)
library(randomForest)
library(broomstick)
library(patchwork)
library(tidymodels)
library(vip)
library(glmnet)
library(tidytext)
library(flextable)

range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}

mode <- function(x) {
  ux <- unique(x)
  ux[which.max(tabulate(match(x, ux)))]
}

opts <- options(knitr.kable.NA = "")

`%out%` <- Negate(`%in%`)

# disabling scientific notation
options(scipen = 999)

theme_set(theme_light())
```

## Load in data 

```{r}
pcodes <- read_excel("./data/Myanmar PCodes Release_9.3_Jan2021_(StRgn_Dist_Tsp_Town_Ward_VT).xlsx",
                     sheet = "03_Township") 

acled <- read_csv("./data/acled_20220606.csv") %>% 
  left_join(pcodes %>% select(admin3_pcode = Tsp_Pcode, 
                             admin2_pcode = `District/SAZ_Pcode`, 
                             admin2 = `District/SAZ_Name_Eng`,
                             admin1_pcode = SR_Pcode),
            by = "admin3_pcode") %>% 
  rename(admin2 = admin2.y) %>% 
  filter(year >= 2021) 

conflict_score <-  read_csv("https://github.com/food-security-cluster-myanmar/mmr_township_prioritisation/blob/main/data/conflict_score2.csv") 

pin <- read_csv("./data/fs_pin.csv") 

codebook_ifpri <- read_csv("./data/mhws_rd1_codebook.csv") %>% clean_names

ifpri_raw <- read_dta("./data/mhws_rd1.dta") %>% zap_labels()

survey <- read_csv("./data/survey3.csv")

survey_mini <- survey %>%
  mutate(
    edu_higher = ifelse(hoh_education == "edu_higher", 1, 0),
    edu_low = ifelse(hoh_education %in% c ("edu_none", "edu_primary"), 1, 0),
    edu_primary = ifelse(hoh_education == "edu_primary", 1, 0),
    edu_secondary = ifelse(hoh_education == "edu_secondary", 1, 0),
    # edu_religious = ifelse(hoh_education ==  "edu_religious", 1, 0), 
    hh_debt = case_when(hh_debt_borrow_from %in% c(1, 2) ~ 0, 
                        hh_debt_borrow_from %in% c(3, 4, 5, 6, 7, 8, 9) ~ 1, 
                        TRUE ~ 0)) %>%
  select(
    ims_farmer,
    ims_other, 
    ims_public_em, 
    ims_stable_ag, 
    ims_stable_non_ag, 
    ims_casual_ag,
    ims_casual_non_ag,
    ims_prof_self_em, 
    ims_no_income, 
    shocks_conflict,
    shocks_lostwork,  
    shocks_foodprices, 
    shocks_cantworkbusiness,
    shocks_accesseconomy, 
    no_accessmarket,
    edu_higher,
    edu_secondary,
    edu_primary,
    edu_low,
    rural,
    children_0_4,
    hoh_female,
    fies_ateless, fies_fewfoods, fies_healthy, fies_hungry,
    fies_worried, fies_ranout, fies_whlday, fies_skipped,
    fcs_stap, fcs_pulse, fcs_dairy, fcs_pr,
    fcs_veg, fcs_fruit, fcs_fat, fcs_sugar, 
    fcs_borderline_poor, 
    cs_stress_hh_assets,
    cs_stress_spent_savings,
    cs_stress_credit,
    cs_stress_borrowed_money,
    cs_crisis_sold_prod_assets,
    cs_crisis_no_school,
    cs_crisis_reduced_health_exp,
    cs_crisis_childwork,
    cs_crisis_consumed_seed_stocks,
    cs_emergency_sold_house,
    cs_emergency_hh_risk,
    cs_emergency_sold_last_draught,
    cs_emergency_hh_migration, 
    hh_debt_more,
    survey_id, 
    agri_hhd, 
    hh_size, 
    no_accessmarket, 
    not_improved_drinking_water, 
    tot_income,
    income_reduced, 
    covid_goodstransp, 
    covid_marketclosed
  ) %>%
  mutate(across(where(is.numeric), ~ replace(., is.na(.), 0))) 



```

## MSNA 

```{r warning = FALSE}
read_excel("./data/REACH_MSNA 2022_Dataset_External.xlsx", 
         sheet = "HH_dataset") %>%  
  clean_names() %>% 
  mutate(hhfcs_inv = range_wna(112 - fs_calculated_fcs), 
         not_improved_housing = ifelse(
           snfi_sheltertype %in% c("makeshift_shelter",
                                   "unfinished_non_enclosed_building",
                                   "tent",
                                   "dont_know",
                                   "other",
                                   "collective_shelter"), 1, 0), 
         not_improved_water_monsoon = ifelse(
           wash_drinkingwatersource_monsoon %in% c("borehole_tubewell",
                                                   "piped_connection_to_house_or_neighbors_house",
                                                   "public_tapstandpipe",
                                                   "rain_water_collection",
                                                   "protected_well",
                                                   "protected_spring"), 0, 1), 
         not_improved_water_dry = ifelse(
           wash_drinkingwatersource_dry %in% c("borehole_tubewell",
                                                   "piped_connection_to_house_or_neighbors_house",
                                                   "public_tapstandpipe",
                                                   "rain_water_collection",
                                                   "protected_well",
                                                   "protected_spring"), 0, 1), 
         not_improved_water = ifelse(not_improved_water_monsoon == 1 | 
                                       not_improved_water_dry == 1, 1, 0), 
         not_improved_sanitation = ifelse(
           wash_sanitationfacility %in% c("flush_or_pourflush_toilet",
                                         "pit_latrine_with_a_slab_and_platform",
                                         "pit_vip_toilet"), 1, 0), 
         rural = ifelse(ward_village == "ward", 0, 1), 
         concern_violence = ifelse(prot_security_concerns_boys %in% 
                                     c("threatenedviolence",
                                       "detained",
                                       "recruitedarmedgroups",
                                       "injuredexplosive") |
                                     prot_security_concerns_girls %in% 
                                     c("threatenedviolence",
                                       "detained",
                                       "recruitedarmedgroups",
                                       "injuredexplosive") |
                                     prot_security_concerns_women %in% 
                                     c("threatenedviolence",
                                       "detained",
                                       "recruitedarmedgroups",
                                       "injuredexplosive") | 
                                     prot_security_concerns_men %in% 
                                     c("threatenedviolence",
                                       "detained",
                                       "recruitedarmedgroups",
                                       "injuredexplosive"), 
                                   1, 0)) %>% 
   rename(state = state_region_2) %>% 
  write_csv("./data/msna.csv")

  
```


## Cleaning script 

```{r}
clean_ifpri <- function(tbl){
  
  tbl %>% 
    mutate(val = case_when(var == "b_04" & value == 1 ~ "male", 
                          var == "b_04" & value == 2 ~ "female", 
                          TRUE ~ as.character(value)), 
           val = case_when(var == "b_06" & value == 1 ~ "Kachin", 
                           var == "b_06" & value == 2 ~ "Kayah",
                           var == "b_06" & value == 3 ~ "Kayin",
                           var == "b_06" & value == 4 ~ "Chin",
                           var == "b_06" & value == 5 ~ "Sagaing",
                           var == "b_06" & value == 6 ~ "Tanintharyi",
                           var == "b_06" & value == 7 ~ "Bago",
                           var == "b_06" & value == 8 ~ "Magway",
                           var == "b_06" & value == 9 ~ "Mandalay",
                           var == "b_06" & value == 10 ~ "Mon",
                           var == "b_06" & value == 11 ~ "Rakhine",
                           var == "b_06" & value == 12 ~ "Yangon",
                           var == "b_06" & value == 14 ~ "Ayeyarwady",
                           var == "b_06" & value == 15 ~ "Nay Pyi Taw",
                           var == "b_06" & value == 131 ~ "Shan (North)",
                           var == "b_06" & value == 132 ~ "Shan (East)",
                           var == "b_06" & value == 133 ~ "Shan (South)", 
                           TRUE ~ as.character(value)), 
           val = case_when(var == "b_07" & value == 1 ~ "rural",
                           var == "b_07" & value == 2 ~ "urban", 
                           TRUE ~ as.character(value)), 
           val = case_when(var == "b_08" & value == 0 ~ "none",
                           var == "b_08" & value > 0 & value < 11 ~ "standard_1_10",
                           var == "b_08" & value == 11 ~ "technical_high_school",
                           var == "b_08" & value == 12 ~ "teachers_certificate",
                           var == "b_08" & value == 13 ~ "tvet_diploma",
                           var == "b_08" & value == 14 ~ "some_college",
                           var == "b_08" & value == 15 ~ "bachelors_graduate",
                           var == "b_08" & value == 16 ~ "postgraduate_diploma",
                           var == "b_08" & value == 17 ~ "masters_degree",
                           var == "b_08" & value == 18 ~ "phd",
                           var == "b_08" & value == 20 ~ "monastic_religious", 
                           TRUE ~ as.character(value)), 
           val = case_when(var == "d_01" ~ as.character(value), 
                           TRUE ~ as.character(value)),
           val = case_when(var == "e_01" & value %in% c(3, 4, 5) ~ "improved_housing",
                           var == "e_01" & value %in% c(1, 2, 6, 7) ~ "not_improved_housing",
                           TRUE ~ as.character(value)), 
          val = case_when(var == "e_03" & value == 1 ~ "improved_floor",
                          var == "e_03" & value == 2 ~ "not_improved_floor", 
                          TRUE ~ as.character(value)),
          val = case_when(var == "e_05" & value > 0 & value < 7 ~ "improved_drinking_water",
                          var == "e_05" & value > 7 ~ "not_improved_drinking_water", 
                          TRUE ~ as.character(value)),
          val = case_when(var == "e_06" & value > 0 & value < 3 ~ "improved_sanitation", 
                          var == "e_06" & value >= 3 ~ "not_improved_sanitation", 
                          TRUE ~ as.character(value)),
          val = case_when(var == "e_07" & value == 9 ~ "no_electricity",
                          var == "e_07" & value != 9 ~ "electricity", 
                          TRUE ~ as.character(value)),
          val = case_when(var %in% c("e_08", "e_09", "e_10", "e_11", 
                                     "e_12", "e_13",  "e_15", 
                                     "j_01", 
                                     "k_16", 
                                     "m_06") & 
                            value == 1 ~ "yes", 
                          var %in% c("e_08", "e_09", "e_10", "e_11", 
                                     "e_12", "e_13", "e_15", 
                                     "j_01", 
                                     "k_16", 
                                     "m_06") & 
                            value == 2 ~ "no", 
                          TRUE ~ as.character(value)), 
          # e_14 (number of mobile phones) and e_15 (acres of land) not changed
         val = case_when(var == "g_02" & value == 1 ~ "wage_crop_farming", 
                         var == "g_02" & value == 2 ~ "wage_livestock",
                         var == "g_02" & value == 3 ~ "wage_fishing",
                         var == "g_02" & value == 4 ~ "wage_non_agriculture",
                         var == "g_02" & value == 5 ~ "salaried_crop_farming",
                         var == "g_02" & value == 6 ~ "salaried_livestock",
                         var == "g_02" & value == 7 ~ "salaried_fishing",
                         var == "g_02" & value == 8 ~ "salaried_non_agriculture",
                         var == "g_02" & value == 9 ~ "own_crops",
                         var == "g_02" & value == 10 ~ "own_livestock",
                         var == "g_02" & value == 11 ~ "own_fishing",
                         var == "g_02" & value == 12 ~ "own_non_farm_enterprise",
                         var == "g_02" & value == 13 ~ "rent",
                         var == "g_02" & value == 14 ~ "donations_pensions",
                         var == "g_02" & value == 15 ~ "remittances", 
                         TRUE ~ as.character(value)),
         val = case_when(var == "h_03" & value == 1 ~ "availability_materials", 
                         var == "h_03" & value == 2 ~ "high_prices_materials", 
                         var == "h_03" & value == 3 ~ "high_prices_fuel", 
                         var == "h_03" & value == 4 ~ "disruption_banking", 
                         var == "h_03" & value == 5 ~ "access_customers", 
                         var == "h_03" & value == 6 ~ "electricity_problems", 
                         var == "h_03" & value == 7 ~ "few_customers", 
                         var == "h_03" & value == 8 ~ "difficulty_hiring", 
                         var == "h_03" & value == 9 ~ "no_difficulties", 
                         TRUE ~ as.character(value)),
         val = case_when(var == "j_08" & value == 1 ~ "very_insecure", 
                         var == "j_08" & value == 2 ~ "somewhat_insecure", 
                         var == "j_08" & value == 3 ~ "secure", 
                         var == "j_08" & value == 4 ~ "very_secure", 
                         TRUE ~ as.character(value)),
         val = case_when(var %in% c("k_01", "k_05", "k_07", "k_08", "k_09", "k_10", 
                                    "k_11", "k_12", "k_13", "k_14", "k_15") & 
                           value == 1 ~ "yes", 
                         var %in% c("k_01", "k_05", "k_07", "k_08", "k_09", "k_10", 
                                    "k_11", "k_12", "k_13", "k_14", "k_15") & 
                           value == 2 ~ "no",
                         var %in% c("k_01", "k_05", "k_07", "k_08", "k_09", "k_10", 
                                    "k_11", "k_12", "k_13", "k_14", "k_15") & 
                           value == 3 ~ "already", 
                         TRUE ~ as.character(value)),
         val = case_when(var == "k_17" & value == 1 ~ "not_difficult", 
                         var == "k_17" & value == 2 ~ "somewhat_difficult", 
                         var == "k_17" & value == 3 ~ "very_difficult"), 
         val = case_when(var %in% c("n_01", "n_03", "n_05",
                                    "o_02") & 
                           value == 1 ~ "yes", 
                         var %in% c("n_01", "n_03", "n_05",
                                    "o_02") & 
                           value == 2 ~ "no", 
                         TRUE ~ as.character(value)), 
         val = case_when(var %in% c("n_02", "n_04", "n_06") & 
                           value == 1 ~ "1_2_times", 
                         var %in% c("n_02", "n_04", "n_06") & 
                           value == 2 ~ "3_10_times",
                         var %in% c("n_02", "n_04", "n_06") & 
                           value == 3 ~ ">=10_times",
                         TRUE ~ as.character(value)),
         val = case_when(var %in% c("o_03", "o_05") & value == 1 ~ "any_time", 
                         var %in% c("o_03", "o_05") & value == 1 ~ "most_times", 
                         var %in% c("o_03", "o_05") & value == 1 ~ "few_times", 
                         var %in% c("o_03", "o_05") & value == 1 ~ "never", 
                         TRUE ~ as.character(value)), 
         val = case_when(var == "o_04" & value == 1 ~ "all_children", 
                         var == "o_04" & value == 2 ~ "some_children",
                         var == "o_04" & value == 3 ~ "none_children",
                         TRUE ~ as.character(value)),
         val = case_when(var == "o_06" & value == 1 ~ "no_money", 
                         var == "o_06" & value == 2 ~ "internet_disruptions", 
                         var == "o_06" & value == 1 ~ "electricity_problems",
                         var == "o_06" & value == 1 ~ "not_interested",
                         TRUE ~ as.character(value)), 
         var = recode(var,
                      "b_04" = "respondent_sex", 
                      "b_06" = "state", 
                      "d_01" = "township_code",
                      "c_01" = "age_0_4", 
                      "c_02" = "age_5_14", 
                      "c_03" = "females_15_64",
                      "c_04" = "males_15_64", 
                      "c_05" = "females_>65", 
                      "c_06" = "males_>65",
                      "f_01_01" = "f_01_wage", 
                      "f_01_02" = "f_01_salaried", 
                      "f_01_03" = "f_01_own_crops", 
                      "f_01_04" = "f_01_own_livestock", 
                      "f_01_05" = "f_01_own_fishing", 
                      "f_01_06" = "f_01_non_farm_enterprise", 
                      "f_01_07" = "f_01_no_employment", 
                      "f_05_01" = "f_05_not_interested", 
                      "f_05_02" = "f_05_slack_season", 
                      "f_05_03" = "f_05_could_not_find", 
                      "f_05_04" = "f_05_ill_old", 
                      "f_05_05" = "f_05_children_family", 
                      "f_05_06" = "f_05_movement_restrictions", 
                      "f_05_07" = "f_05_conflict_violence", 
                      "f_05_08" = "f_05_not_safe_health_reasons", 
                      "g_01_01" = "g_01_wage_crop_farming", 
                      "g_01_02" = "g_01_wage_livestock", 
                      "g_01_03" = "g_01_wage_fishing", 
                      "g_01_04" = "g_01_wage_non_agriculture", 
                      "g_01_05" = "g_01_salaried_crop_farming", 
                      "g_01_06" = "g_01_salaried_livestock", 
                      "g_01_07" = "g_01_salaried_fishing",
                      "g_01_08" = "g_01_salaried_non_agriculture", 
                      "g_01_09" = "g_01_own_crops", 
                      "g_01_10" = "g_01_own_livestock", 
                      "g_01_11" = "g_01_own_fishing", 
                      "g_01_12" = "g_01_own_non_farm_enterprise", 
                      "g_01_13" = "g_01_rent",
                      "g_01_14" = "g_01_donations_pensions", 
                      "g_01_15" = "g_01_remittances", 
                      "g_01_16" = "g_01_no_employment", 
                      "h_02_01" = "h_02_mobile_food_vendor", 
                      "h_02_02" = "h_02_fixed_food_vendor", 
                      "h_02_03" = "h_02_trader_wholesaler", 
                      "h_02_04" = "h_02_rice_miller", 
                      "h_02_05" = "h_02_other_food_processing", 
                      "h_02_06" = "h_02_food_transport", 
                      "h_02_07" = "h_02_prepared_food_drinks", 
                      "h_02_08" = "h_02_food_delivery", 
                      "h_02_09" = "h_02_agricultural_input_supplier", 
                      "h_02_10" = "h_02_agricultural_machinery",
                      "h_02_11" = "h_02_agricultural_services", 
                      "j_02_01" = "j_02_drought", 
                      "j_02_02" = "j_02_flood", 
                      "j_02_03" = "j_02_irregular_rf_temp",
                      "j_02_04" = "j_02_lightning", 
                      "j_02_05" = "j_02_landlside", 
                      "j_02_06" = "j_02_earthquake", 
                      "j_07_01" = "j_07_violence", 
                      "j_07_02" = "j_07_theft", 
                      "j_07_03" = "j_07_intra_household_conflict", 
                      "j_07_04" = "j_07_none", 
                      "l2_02_c" = "l2_vegetables1", 
                      "l2_03_c" = "l2_vegetables2", 
                      "l2_04_c" = "l2_vegetables3", 
                      "l2_05_c" = "l2_staples1", 
                      "l2_06_c" = "l2_staples2", 
                      "l2_07_c" = "l2_pulses1", 
                      "l2_08_c" = "l2_pulses2", 
                      "l2_09_c" = "l2_dairy1", 
                      "l2_10_c" = "l2_protein_seafood", 
                      "l2_11_c" = "l2_protein_meat", 
                      "l2_12_c" = "l2_protein_eggs", 
                      "l2_13_c" = "l2_fruits1", 
                      "l2_14_c" = "l2_fruits2", 
                      "l2_15_c" = "l2_sugar", 
                      "l2_16_c" = "l2_fat", 
                      "k_01" = "k_01_sell_assets", 
                      "k_03" = "k_03_mortgage_assets", 
                      "k_05" = "k_05_consumed_seed_stock", 
                      "k_06" = "k_06_reduced_agriculture",
                      "k_07" = "k_07_spend_savings", 
                      "k_08" = "k_08_reduced_healthcare", 
                      "k_09" = "k_09_reduced_nfi", 
                      "k_10" = "k_10_reduced_food", 
                      "k_11" = "k_11_borrow_food", 
                      "k_12" = "k_12_borrow_money", 
                      "k_13" = "k_13_migrate", 
                      "k_14" = "k_14_children_work", 
                      "k_15" = "k_15_risky_activity", 
                      "m_01" = "m_01_responsible_for_food", 
                      "m_02" = "m_02_7days_exp_food_markets", 
                      "m_03" = "m_03_7days_exp_prepared_food", 
                      "m_04" = "m_04_7days_own_garden", 
                      "m_05" = "m_05_7days_value_own_garden", 
                      "m_06" = "m_06_7days_food_free_wage", 
                      "m_07" = "m_07_7days_value_food_free_wage"))
          
           
           
}

```


### write ifpri

```{r}
ifpri <- ifpri_raw %>% 
  select(hhid, 
         b_04,
         b_06, 
         b_07:b_09, 
         c_01:c_07, 
         d_01, 
         e_01, 
         e_03, 
         e_05:e_07, 
         e_08:e_16, 
         e_16_acres, 
         e_16_length, 
         e_16_width, 
         f_01_01:f_01_07,
         f_05_01:f_05_08, 
         g_01_01:g_01_16, 
         g_02,
         # not for the moment, we can look at wage employment later
         g_06_01:g_06_99, 
         h_01_01:h_08_01, 
         # We'll look at h_02 later
         h_02_01:h_02_99,
         h_03,
         j_01, 
         j_02_01:j_02_99, 
         # We'll look at this later
         j_05, j_06, 
         j_07_01:j_07_97, 
         j_08, 
         j_10_01:j_10_99, 
         k_01, 
         k_02_01:k_02_99, 
         k_03, 
         k_04_01:k_04_99, 
         k_05:k_17, 
         # we'll tackle this later
         # l1_01:l1_06, 
         l2_02_a:l2_16_c, 
         m_01_01:m_01_98, 
         m_02:m_07, 
         n_01:n_06, 
         o_01_00:o_01_96, 
         o_02:o_06) %>% 
  pivot_longer(cols = -hhid, 
               names_to = "var", 
               values_to = "value") %>% 
  left_join(codebook_ifpri %>% 
              mutate(label = str_replace_all(str_to_lower(variable_label), 
                                          " ", 
                                          "_")) %>% 
              select(label, variable_type, variable_name), 
            by = c("var" = "variable_name")) %>% 
  select(label, value, var, hhid, variable_type) %>% 
  clean_ifpri() 

```


### FAO survey mini

```{r survey_mini}
survey %>%
  mutate(
    edu_higher = ifelse(hoh_education == "edu_higher", 1, 0),
    edu_low = ifelse(hoh_education %in% c ("edu_none", "edu_primary"), 1, 0),
    edu_primary = ifelse(hoh_education == "edu_primary", 1, 0),
    edu_secondary = ifelse(hoh_education == "edu_secondary", 1, 0),
    # edu_religious = ifelse(hoh_education ==  "edu_religious", 1, 0), 
    hh_debt = case_when(hh_debt_borrow_from %in% c(1, 2) ~ 0, 
                        hh_debt_borrow_from %in% c(3, 4, 5, 6, 7, 8, 9) ~ 1, 
                        TRUE ~ 0)) %>%
  select(
    ims_farmer,
    ims_other, 
    ims_public_em, 
    ims_stable_ag, 
    ims_stable_non_ag, 
    ims_casual_ag,
    ims_casual_non_ag,
    ims_prof_self_em, 
    ims_no_income, 
    shocks_conflict,
    shocks_naturalhazard,
    shocks_lostwork,  
    shocks_foodprices, 
    shocks_cantworkbusiness,
    shocks_accesseconomy, 
    no_accessmarket,
    edu_higher,
    edu_secondary,
    edu_primary,
    edu_low,
    rural,
    children_0_4,
    hoh_female,
    fies_ateless, fies_fewfoods, fies_healthy, fies_hungry,
    fies_worried, fies_ranout, fies_whlday, fies_skipped,
    fcs_stap, fcs_pulse, fcs_dairy, fcs_pr,
    fcs_veg, fcs_fruit, fcs_fat, fcs_sugar, 
    fcs_borderline_poor, 
    cs_stress_hh_assets,
    cs_stress_spent_savings,
    cs_stress_credit,
    cs_stress_borrowed_money,
    cs_crisis_sold_prod_assets,
    cs_crisis_no_school,
    cs_crisis_reduced_health_exp,
    cs_crisis_childwork,
    cs_crisis_consumed_seed_stocks,
    cs_emergency_sold_house,
    cs_emergency_hh_risk,
    cs_emergency_sold_last_draught,
    cs_emergency_hh_migration, 
    hh_debt_more,
    survey_id, 
    agri_hhd, 
    hh_size, 
    no_accessmarket, 
    not_improved_drinking_water, 
    tot_income,
    income_reduced, 
    covid_goodstransp, 
    covid_marketclosed
  ) %>%
  mutate(across(where(is.numeric), ~ replace(., is.na(.), 0))) %>% 
  write_csv("./data/survey_mini.csv")
```


### IFPRI mini 

```{r mini, include=FALSE}

ifpri %>% 
  filter(str_detect(var, "b_|k_|f_01_|f_05_|j_01|j_07|j_08|l2_|k_|e_01|e_03|e_05|e_06|e_07|n_")) %>% 
  replace_na(list(value = 0)) %>% 
  select(hhid, var, value) %>% 
  pivot_wider(names_from = var, values_from = value) %>% 
  arrange(hhid) %>% 
  cbind(ifpri %>%
          pivot_wider(names_from = var, values_from = val) %>% 
          arrange(hhid) %>%
          select(state, township_code) %>% 
          filter(!is.na(state))) %>% 
  select(-matches("j_02_99")) %>% 
  select(-starts_with("k_02_|k_04_")) %>% 
  mutate(fcs_vegetables = pmax(l2_vegetables1, l2_vegetables2, l2_vegetables3, na.rm = TRUE), 
         fcs_staples = pmax(l2_staples1, l2_staples2, na.rm = TRUE), 
         fcs_protein = pmax(l2_protein_meat, l2_protein_seafood, l2_protein_eggs,
                           na.rm = TRUE), 
         fcs_pulses = pmax(l2_pulses1, l2_pulses2, na.rm = TRUE), 
         fcs_fruits = pmax(l2_fruits1, l2_fruits2, na.rm = TRUE)) %>% 
  rename(fcs_sugar = l2_sugar, 
         fcs_fat = l2_fat, 
         fcs_dairy = l2_dairy1) %>% 
  mutate(hhfcs = 
           (fcs_sugar * .5 + fcs_fat * .5) + 
           (fcs_vegetables + fcs_fruits) + 
           (fcs_staples * 2) + 
           (fcs_pulses * 3) + 
           (fcs_protein * 4 + fcs_dairy * 4), 
         hhfcs_inv = range_wna(hhfcs))  %>% 
  mutate(b_08 = recode(b_08, `20` = 10), 
         education_level = range_wna(abs(19 - b_08)), 
         physical_security = recode(j_08, `9997` = 4), 
         physical_security = range_wna(abs(4 - physical_security))) %>% 
  mutate(rural_urban = ifelse(b_07 == 1, "rural", "urban"), 
         rural = ifelse(b_07 == 1, 1, 0)) %>% 
  mutate(natural_hazards = ifelse(j_01 == 1, 1, 0)) %>% 
  mutate_at(vars(k_01_sell_assets,
           k_03_mortgage_assets, 
           k_05_consumed_seed_stock, 
           k_06_reduced_agriculture, 
           k_07_spend_savings, 
           k_08_reduced_healthcare, 
           k_09_reduced_nfi, 
           k_10_reduced_food, 
           k_11_borrow_food, 
           k_12_borrow_money, 
           k_13_migrate,
           k_14_children_work,
           k_15_risky_activity), 
           ~ ifelse(.x > 100, 0, .x)) %>% 
  mutate_at(vars(k_01_sell_assets:k_15_risky_activity), 
            ~ case_when(. == 1 ~ 1, 
                        . == 2 ~ 0, 
                        . == 3 ~ 1,
                        TRUE ~ 0)) %>% 
  mutate(csi_unweighted = 
           k_01_sell_assets +
           k_03_mortgage_assets + 
           k_05_consumed_seed_stock + 
           k_06_reduced_agriculture + 
           k_07_spend_savings + 
           k_08_reduced_healthcare + 
           k_09_reduced_nfi + 
           k_10_reduced_food + 
           k_11_borrow_food + 
           k_12_borrow_money + 
           k_13_migrate +
           k_14_children_work +
           k_15_risky_activity, 
         csi_weighted =
           (k_01_sell_assets +
              k_03_mortgage_assets +
              k_05_consumed_seed_stock + 
              k_06_reduced_agriculture +
              k_07_spend_savings +
              k_08_reduced_healthcare +
              k_09_reduced_nfi + 
              k_12_borrow_money) * .5 + 
           (k_10_reduced_food + 
           k_11_borrow_food + 
           k_13_migrate + 
           k_14_children_work + 
           k_15_risky_activity) * 1) %>%  
  mutate(csi_emergency = ifelse(k_10_reduced_food == 1 | 
                                  k_11_borrow_food == 1 |
                                  k_13_migrate == 1 | 
                                  k_14_children_work == 1 | 
                                  k_15_risky_activity == 1, 
                                "emergency", 
                                "non_emegency")) %>% 
  mutate(not_improved_floor = ifelse(e_03 %in% c(2), 
                                     1, 0), 
         not_improved_water = ifelse(e_05 %in% c(6, 7, 8, 9, 9999), 
                                     1, 0), 
         not_improved_sanitation = ifelse(e_06 %in% c(3, 4, 5, 9999),  
                                          1, 0), 
         no_electricity = ifelse(e_07 %in% c(9, 9999, 9997, 9998, 9997), 1, 0)) %>% 
  mutate(not_improved_housing = ifelse(e_01 %in% c(1, 2, 6, 7), 1, 0)) %>% 
  mutate_at(vars(n_01, n_03, n_05), 
            ~ case_when(.x == 1 ~ 1, 
                        .x == 2 ~ 0,
                        TRUE ~ 0)) %>% 
  mutate_at(vars(n_02, n_04, n_06), 
            ~ case_when(.x == 1 ~ 1.5, 
                        .x == 2 ~ 6.5, 
                        .x == 3 ~ 10)) %>% 
  # mutate_at(vars(n_02, n_04, n_06), 
  #         ~ range_wna(.)) %>% 
  mutate(state = recode(state, 
                        `1` = "Kachin",
                        `2` = "Kayah",
                        `3` = "Kayin",
                        `4` = "Chin",
                        `5` = "Sagaing",
                        `6` = "Tanintharyi",
                        `7` = "Bago",
                        `8` = "Magway",
                        `9` = "Mandalay",
                        `10` = "Mon",
                        `11` = "Rakhine",
                        `12` = "Yangon",
                        `14` = "Ayeyarwady",
                        `15` = "Nay Pyi Taw",
                        `131` = "Shan (North)",
                        `132` = "Shan (East)",
                        `133` = "Shan (South)")) %>% 
  mutate(insecure = ifelse(physical_security > 0.34, 1, 0), 
         count = 1) %>% 
  write_csv("./data/mini.csv")
```




