{"frames":[{"func":"ifpri %>% filter(str_detect(var, \"b_|k_|f_01_|f_05_|j_01|j_07|j_08|l2_|k_|e_01|e_03|e_05|e_06|e_07|n_\")) %>% \n    replace_na(list(value = 0)) %>% select(hhid, var, value) %>% \n    pivot_wider(names_from = var, values_from = value) %>% arrange(hhid) %>% \n    cbind(msna %>% pivot_wider(names_from = var, values_from = val) %>%  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate(., rural_urban = ifelse(b_07 == 1, \"rural\", \"urban\"), \n    rural = ifelse(b_07 == 1, 1, 0))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate(., b_08 = recode(b_08, `20` = 10), education_level = range_wna(abs(19 - \n    b_08)), physical_security = recode(j_08, `9997` = 4), physical_security = range_wna(abs(4 - \n    physical_security)))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate(., hhfcs = (fcs_sugar * 0.5 + fcs_fat * 0.5) + (fcs_vegetables + \n    fcs_fruits) + (fcs_staples * 2) + (fcs_pulses * 3) + (fcs_protein * \n    4 + fcs_dairy * 4), hhfcs_inv = range_wna(hhfcs))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rename(., fcs_sugar = l2_sugar, fcs_fat = l2_fat, fcs_dairy = l2_dairy1)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate(., fcs_vegetables = pmax(l2_vegetables1, l2_vegetables2, \n    l2_vegetables3, na.rm = TRUE), fcs_staples = pmax(l2_staples1, \n    l2_staples2, na.rm = TRUE), fcs_protein = pmax(l2_protein_meat, \n    l2_protein_seafood, l2_protein_eggs, na.rm = TRUE), fcs_pulses = pmax(l2_pulses1,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"select(., -starts_with(\"k_02_|k_04_\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"select(., -matches(\"j_02_99\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cbind(., msna %>% pivot_wider(names_from = var, values_from = val) %>% \n    arrange(hhid) %>% select(state, township_code) %>% filter(!is.na(state)))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cbind(deparse.level, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"data.frame(..., check.names = FALSE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"msna %>% pivot_wider(names_from = var, values_from = val) %>% \n    arrange(hhid) %>% select(state, township_code) %>% filter(!is.na(state))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"filter(., !is.na(state))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"select(., state, township_code)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"arrange(., hhid)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"pivot_wider(., names_from = var, values_from = val)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"pivot_wider.data.frame(., names_from = var, values_from = val)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"build_wider_spec(data, names_from = !!names_from, values_from = !!values_from, \n    names_prefix = names_prefix, names_sep = names_sep, names_glue = names_glue, \n    names_sort = names_sort)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tidyselect::eval_select(enquo(names_from), data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval_select_impl(data, names(data), as_quosure(expr, env), include = include, \n    exclude = exclude, strict = strict, name_spec = name_spec, \n    allow_rename = allow_rename)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"with_subscript_errors(vars_select_eval(vars, expr, strict, data = x, \n    name_spec = name_spec, uniquely_named = uniquely_named, allow_rename = allow_rename, \n    type = type), type = type)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(instrument_base_errors(expr), vctrs_error_subscript = function(cnd) {\n    cnd$subscript_action <- subscript_action(type)\n    cnd$subscript_elt <- \"column\"\n    cnd_signal(cnd) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"value[[3L]](cond)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"cnd_signal(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rlang:::signal_abort(x)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error: Can't subset columns that don't exist.\n\u001B[31mx\u001B[39m Column `var` doesn't exist.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n"}